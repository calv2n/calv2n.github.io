---
title: Project Portfolio
---

## Gradebook

Active January 1 - May 31

https://www.github.com/gradebook-dev/

**Description:** Gradebook is an open-source R package and Web Application that provides a consistent interface for instructors to quickly and more accurately calculate course grades.

**The Problem:** Many instructors (especially at Berkeley) opt to use [Gradescope](https://www.gradescope.com) for students to upload their submissions to course assignments, as it provides an industry leading interface to instructors and readers for grading. However, Gradescope lacks functionality of implimenting a *course policy*. An example of a course policy ([Data 88S](http://stat88.org/syllabus/)):

![](pages/ss-d88s.png)

At first, this might seem like a simple problem to solve with some sort of code file (perhaps using Pandas & NumPy in Python or R). But we have seen with courses such as [Statistics 20](https://www.stat20.org) that these course policies can get extraordinarily convoluted and error prone. 

The current best solution for instructors to calculate final grades based on their course policy is to either of the following:

- Parallel program two seperate code books and compare the scores against one another until they agree.
    - pros: very accurate
    - cons: takes two programmers that fully understand the course policy & takes longer than single code book.
- Create a single code book that can result in potential bugs that result in inaccurate scores.
    - pros: faster than parallel programming
    - cons: error prone and still not a fast solution.

**The Solution:** 

Gradebook: An interface that abstracts the code into human understandable steps.

![](pages/gb.png)

An instructor (or reader) provides the web app with their course policy using the intuitive policy tab. Then, they can upload their course's Gradescope CSV to see data visualizations, statistics, a final grade table, and more.

### What I Learned

- **Git** and **GitHub** (including branching, pull requests, working in a team setting).

- The importance of **Teamwork** & **Communication** in Data Science.

- Web development essentials (incl. **HTML**, **CSS**)

## Email Spam Detection

## Diabetes Prediction

## Gitlet

July 2023

Source code available upon request.

### What I Learned

This was my first large project when I came to Berkeley as an undergraduate. Although it doesn't relate too much to data science, I 

- **Java** for large scale projects

- Designing and implimenting **data structures** to maximize efficiency.

- Fundumentals of **Git** as a software from the ground up.

